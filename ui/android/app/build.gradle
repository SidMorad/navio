apply plugin: 'com.android.application'
apply plugin: 'eclipse'
apply plugin: 'com.greensopinion.gradle-android-eclipse'

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {

    implementation('com.mapbox.mapboxsdk:mapbox-android-sdk:5.2.1@aar') {
        transitive = true
    }
    implementation 'com.mapbox.mapboxsdk:mapbox-android-navigation:0.7.1'
    implementation ('com.mapbox.mapboxsdk:mapbox-android-navigation-ui:0.7.1') {
        transitive = true
    }
    api 'com.google.android.gms:play-services-location:11.6.0'
    implementation "com.android.support:appcompat-v7:${rootProject.supportLibVersion}"

    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.slf4j:slf4j-android:1.7.25'

}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId "biz.navio"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.compileSdkVersion
        versionCode rootProject.versionNum
        versionName rootProject.versionName
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/resources']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    signingConfigs {
        release {
            storeFile file("../../app/release-dev.keystore")
            storePassword "change-this-to-actual-password"
            keyAlias "aval_viewer"
            keyPassword "change-this-to-actual-password"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        /* CGIARProvider refers to java.awt
         * Helper7 refers to java.lang.management
         * HeightTile refers to javax.imageio and java.awt
         * OSMElement refers to javax.xml.stream
         */
        disable 'InvalidPackage'
        abortOnError false
    }

    packagingOptions {
        pickFirst 'META-INF/LICENSE'
    }
}


/** only necessary if you need to use latest SNAPSHOT
configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
 **/


task run(dependsOn: 'installDebug') {
    doFirst {
        println(">> adb run...")
        String adb = System.getenv()['ANDROID_HOME'] + '/platform-tools/adb'
        String cmd = "${adb} shell am start -n biz.navio/.MainActivity"
        def proc = cmd.execute()
        proc.in.eachLine { line -> println line }
        proc.err.eachLine { line -> System.err.println('ERROR: ' + line) }
        proc.waitFor()
    }
}
